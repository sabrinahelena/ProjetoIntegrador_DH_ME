// <auto-generated />
using System;
using ListMEAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListMEAPI.Migrations
{
    [DbContext(typeof(ListMEContext))]
    [Migration("20220804163132_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ListMEAPI.Models.EstoqueModel", b =>
                {
                    b.Property<int>("Id_Estoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Estoque"), 1L, 1);

                    b.HasKey("Id_Estoque");

                    b.ToTable("Estoque", (string)null);
                });

            modelBuilder.Entity("ListMEAPI.Models.ListaComprasModel", b =>
                {
                    b.Property<int>("Id_ListaDeCompras")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_ListaDeCompras"), 1L, 1);

                    b.HasKey("Id_ListaDeCompras");

                    b.ToTable("Lista de compras", (string)null);
                });

            modelBuilder.Entity("ListMEAPI.Models.ProdutosModel", b =>
                {
                    b.Property<int>("Id_Produtos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Produtos"), 1L, 1);

                    b.Property<string>("Data_Validade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao_Produtos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ListaComprasModelId_ListaDeCompras")
                        .HasColumnType("int");

                    b.Property<string>("Nome_Produtos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<int?>("Quantidade_Produto")
                        .HasColumnType("int");

                    b.HasKey("Id_Produtos");

                    b.HasIndex("ListaComprasModelId_ListaDeCompras");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("ListMEAPI.Models.RelacionarUsuario", b =>
                {
                    b.Property<int>("Id_Relacionamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Relacionamento"), 1L, 1);

                    b.Property<int>("Id_Estoque1")
                        .HasColumnType("int");

                    b.Property<int>("Id_ListaComprasId_ListaDeCompras")
                        .HasColumnType("int");

                    b.Property<int>("Id_Produtos")
                        .HasColumnType("int");

                    b.Property<int>("Id_Residencias")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario1")
                        .HasColumnType("int");

                    b.HasKey("Id_Relacionamento");

                    b.HasIndex("Id_Estoque1");

                    b.HasIndex("Id_ListaComprasId_ListaDeCompras");

                    b.HasIndex("Id_Produtos");

                    b.HasIndex("Id_Residencias");

                    b.HasIndex("Id_Usuario1");

                    b.ToTable("Relacao Usuario", (string)null);
                });

            modelBuilder.Entity("ListMEAPI.Models.ResidenciaModel", b =>
                {
                    b.Property<int>("Id_Residencias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Residencias"), 1L, 1);

                    b.Property<string>("Descricao_Residencias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto_Residencias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Residencias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioModelId_Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id_Residencias");

                    b.HasIndex("UsuarioModelId_Usuario");

                    b.ToTable("Residencias", (string)null);
                });

            modelBuilder.Entity("ListMEAPI.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Usuario"), 1L, 1);

                    b.Property<string>("Data_Nascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto_Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Usuario");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("ListMEAPI.Models.ProdutosModel", b =>
                {
                    b.HasOne("ListMEAPI.Models.ListaComprasModel", null)
                        .WithMany("ListaProdutos")
                        .HasForeignKey("ListaComprasModelId_ListaDeCompras");
                });

            modelBuilder.Entity("ListMEAPI.Models.RelacionarUsuario", b =>
                {
                    b.HasOne("ListMEAPI.Models.EstoqueModel", "Id_Estoque")
                        .WithMany()
                        .HasForeignKey("Id_Estoque1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ListMEAPI.Models.ListaComprasModel", "Id_ListaCompras")
                        .WithMany()
                        .HasForeignKey("Id_ListaComprasId_ListaDeCompras")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ListMEAPI.Models.ProdutosModel", "Id_Produto")
                        .WithMany()
                        .HasForeignKey("Id_Produtos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ListMEAPI.Models.ResidenciaModel", "Id_Residencia")
                        .WithMany()
                        .HasForeignKey("Id_Residencias")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ListMEAPI.Models.UsuarioModel", "Id_Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Id_Estoque");

                    b.Navigation("Id_ListaCompras");

                    b.Navigation("Id_Produto");

                    b.Navigation("Id_Residencia");

                    b.Navigation("Id_Usuario");
                });

            modelBuilder.Entity("ListMEAPI.Models.ResidenciaModel", b =>
                {
                    b.HasOne("ListMEAPI.Models.UsuarioModel", null)
                        .WithMany("residencias")
                        .HasForeignKey("UsuarioModelId_Usuario");
                });

            modelBuilder.Entity("ListMEAPI.Models.ListaComprasModel", b =>
                {
                    b.Navigation("ListaProdutos");
                });

            modelBuilder.Entity("ListMEAPI.Models.UsuarioModel", b =>
                {
                    b.Navigation("residencias");
                });
#pragma warning restore 612, 618
        }
    }
}
