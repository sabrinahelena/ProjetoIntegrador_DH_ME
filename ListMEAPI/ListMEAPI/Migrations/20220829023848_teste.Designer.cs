// <auto-generated />
using System;
using ListMEAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListMEAPI.Migrations
{
    [DbContext(typeof(ListMEContext))]
    [Migration("20220829023848_teste")]
    partial class teste
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ListMEAPI.Models.AcessoModel", b =>
                {
                    b.Property<int>("Id_Acesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Acesso"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Acesso");

                    b.ToTable("Acessos");
                });

            modelBuilder.Entity("ListMEAPI.Models.ContatoModel", b =>
                {
                    b.Property<int>("Id_Contato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Contato"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Contato");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("ListMEAPI.Models.EstoqueModel", b =>
                {
                    b.Property<int>("Id_Estoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Estoque"), 1L, 1);

                    b.Property<string>("Data_Validade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdResidencia")
                        .HasColumnType("int");

                    b.Property<int>("Id_Lista")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId_Produtos")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade_Produto")
                        .HasColumnType("int");

                    b.Property<int?>("ResidenciaModelId_Residencias")
                        .HasColumnType("int");

                    b.Property<int?>("ResidenciaModelId_Residencias1")
                        .HasColumnType("int");

                    b.HasKey("Id_Estoque");

                    b.HasIndex("ProdutoId_Produtos");

                    b.HasIndex("ResidenciaModelId_Residencias");

                    b.HasIndex("ResidenciaModelId_Residencias1");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("ListMEAPI.Models.ProdutosModel", b =>
                {
                    b.Property<int>("Id_Produtos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Produtos"), 1L, 1);

                    b.Property<string>("Descricao_Produtos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Produtos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.HasKey("Id_Produtos");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("ListMEAPI.Models.ResidenciaModel", b =>
                {
                    b.Property<int>("Id_Residencias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Residencias"), 1L, 1);

                    b.Property<string>("Descricao_Residencias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto_Residencias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome_Residencias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioModelId_Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id_Residencias");

                    b.HasIndex("UsuarioModelId_Usuario");

                    b.ToTable("Residencias");
                });

            modelBuilder.Entity("ListMEAPI.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Usuario"), 1L, 1);

                    b.Property<string>("Data_Nascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto_Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ListMEAPI.Models.EstoqueModel", b =>
                {
                    b.HasOne("ListMEAPI.Models.ProdutosModel", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId_Produtos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ListMEAPI.Models.ResidenciaModel", null)
                        .WithMany("Estoque")
                        .HasForeignKey("ResidenciaModelId_Residencias");

                    b.HasOne("ListMEAPI.Models.ResidenciaModel", null)
                        .WithMany("Lista_Compras")
                        .HasForeignKey("ResidenciaModelId_Residencias1");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ListMEAPI.Models.ResidenciaModel", b =>
                {
                    b.HasOne("ListMEAPI.Models.UsuarioModel", null)
                        .WithMany("Residencias")
                        .HasForeignKey("UsuarioModelId_Usuario");
                });

            modelBuilder.Entity("ListMEAPI.Models.ResidenciaModel", b =>
                {
                    b.Navigation("Estoque");

                    b.Navigation("Lista_Compras");
                });

            modelBuilder.Entity("ListMEAPI.Models.UsuarioModel", b =>
                {
                    b.Navigation("Residencias");
                });
#pragma warning restore 612, 618
        }
    }
}
